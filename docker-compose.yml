version: '3'
services:
    db:
      image: ${DB_IMAGE}
      env_file:
        - .env
      volumes:
          - ${PWD}/temp/bitnami/mariadb:/bitnami/mariadb:delegated
          - ${PWD}/temp/db-backups:/tmp/backups:delegated
      ports:
          - 3307:3306
          - 4444:4444
          - 4567:4567
          - 4568:4568
      healthcheck:
          test: ['CMD', '/opt/bitnami/scripts/mariadb-galera/healthcheck.sh']
          interval: 15s
          timeout: 5s
          retries: 6
    php:
      depends_on:
        - db
      env_file:
        - .env
      ports:
          - "9000:9000"
      build:
          context: .
          dockerfile: ./builds/php/Dockerfile
          args:
            - DB_PORT=3306
            - DB_HOST=${DB_HOST}
            - DB_NAME=${DB_NAME}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_USER=${DB_USER}
            - ETC_DIR=/usr/local/etc
      volumes:
          - ${PWD}/temp/var/www/html:/var/www/html:delegated
          - ${PWD}/temp/var/www/moodledata:/var/www/moodledata:delegated
          - ${PWD}/builds/web/error-pages:/var/www/error-pages:delegated
          - ${PWD}/builds/php/info.php:/var/www/html/info.php:delegated
      healthcheck:
          test: ["CMD", "db", "-h", "db", "-u", "root"]
          interval: 30s
          timeout: 10s
          retries: 5
      # Start php-fpm
      command: bash -c "php-fpm"
      # Put site in maintenance mode,
      # copy moodle build to shared location (with cron),
      # upgrade Moodle, purge caches, dissable maintenance mode, start php-fpm
      # command: bash -c "php maintenance.php --enable && chown -R www-data:www-data /app/public && chown -R www-data:www-data /var/www/html/* && cp -ru /app/public/* /var/www/html && cd /var/www/html/admin/cli && php upgrade.php --non-interactive && php purge_caches.php && php maintenance.php --disable && php-fpm"
    redis:
      image: ${REDIS_IMAGE}
      env_file:
        - .env
    web:
      image: ${WEB_IMAGE}
      env_file:
        - .env
      ports:
          - "8081:8081"
      volumes:
          - ${PWD}/temp/var/www/html:/var/www/html:delegated
          - type: bind
            source: ${PWD}/builds/web/nginx.conf
            target: /etc/nginx/conf.d/default.conf
            read_only: false
            bind:
              create_host_path: true
          - ${PWD}/builds/web/error-pages:/var/www/error-pages:ro
    cron:
      depends_on:
        - db
      env_file:
        - .env
      build:
          context: .
          dockerfile: ./builds/cron/Dockerfile
          args:
            - ETC_DIR=/usr/local/etc
      volumes:
          - ${PWD}/builds/php/php.ini:/usr/local/etc/php/conf.d/php.ini:delegated
          - ${PWD}/builds/cron/php-fpm.conf:/usr/local/etc/php-fpm.d/php-fpm.conf:delegated
          #- ${PWD}/builds/cron/crontab.txt:/etc/cron.d/moodle-cron:delegated
          - ${PWD}/temp/var/www:/var/www:delegated
          - ${PWD}/builds/php/info.php:/var/www/html/info.php:delegated
      # command: bash -c "(crontab -l -u www-data; echo \"* * * * * su -c '/usr/local/bin/php /var/www/html/admin/cli/cron.php >&1'\") | crontab"
      # command: cron && tail -f /var/log/moodle-cron.log
      command: bash -c "php /var/www/html/admin/cli/maintenance.php --enable && php /var/www/html/admin/cli/upgrade.php --non-interactive && php /var/www/html/admin/cli/maintenance.php --disable && cron && tail -f /var/log/moodle-cron.log"
      # command: bash -c "cron && tail -f /var/log/moodle-cron.log"
