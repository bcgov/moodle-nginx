version: '3'
services:
    web:
        image: ${WEB_IMAGE:-nginx:1.19}
        ports:
            - "8081:8081"
        volumes:
            - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:delegated
            - ./temp/var/www:/var/www:delegated
    db:
        image: ${DB_IMAGE:-mariadb:10.5}
        env_file: .env
        volumes:
            - mysqldata:/var/lib/mysql:delegated
        ports:
            - 3307:3306
        healthcheck:
          test: [
            "CMD-SHELL",
            "healthcheck.sh --innodb_initialized --connect"
          ]
          interval: 10s
          timeout: 5s
          retries: 5
    php:
        depends_on:
          db:
            condition: service_healthy
          web:
            condition: service_started
        env_file:
          - .env
        build:
            context: .
            dockerfile: PHP.Dockerfile
            args:
              PHP_IMAGE: ${PHP_IMAGE:-php:7.4-fpm}
              PHP_INI_ENVIRONMENT: ${PHP_INI_ENVIRONMENT:-production}
              MOODLE_BRANCH_VERSION: ${MOODLE_BRANCH_VERSION:-MOODLE_402_STABLE}
              F2F_BRANCH_VERSION: ${F2F_BRANCH_VERSION:-MOODLE_400_STABLE}
              HVP_BRANCH_VERSION: ${HVP_BRANCH_VERSION:-stable}
              FORMAT_BRANCH_VERSION: ${FORMAT_BRANCH_VERSION:-MOODLE_311}
              CERTIFICATE_BRANCH_VERSION: ${CERTIFICATE_BRANCH_VERSION:-MOODLE_402_STABLE}
              CUSTOMCERT_BRANCH_VERSION: ${CUSTOMCERT_BRANCH_VERSION:-MOODLE_402_STABLE}
              DATAFLOWS_BRANCH_VERSION: ${DATAFLOWS_BRANCH_VERSION:-MOODLE_35_STABLE}
        volumes:
            - ./temp/var/www:/var/www:delegated
        restart: "unless-stopped"
        # healthcheck:
        #   test: [
        #     "CMD-SHELL",
        #     "php-fpm-healthcheck.sh --listen-queue=10 --accepted-conn=5000 || kill 1"
        #   ]
        #   interval: 10s
        #   timeout: 5s
        #   retries: 5
    cron:
        depends_on:
          db:
            condition: service_healthy
        env_file: .env
        build:
            context: .
            dockerfile: CRON.Dockerfile
            args:
              CRON_IMAGE: ${CRON_IMAGE:-php:7.4-fpm}
              PHP_INI_ENVIRONMENT: ${PHP_INI_ENVIRONMENT:-production}
        volumes:
            - ./temp/var/www:/var/www:delegated
    redis:
        image: redis:latest
volumes:
    mysqldata: {}
