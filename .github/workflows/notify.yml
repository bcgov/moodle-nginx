# Static Deploy On Openshift
# Builds and Deploys merged PR's to persistent pods/services/routes/etc in the OpenShift Dev environment.
name: Deploy on Openshift

env:
  APP: moodle
  USER: ${{ github.actor }}

  PROJECT: ${{ vars.OPENSHIFT_DEPLOY_PROJECT }}
  APP_HOST_URL: moodle-${{ vars.OPENSHIFT_DEPLOY_PROJECT }}-${{ github.ref_name }}.apps.silver.devops.gov.bc.ca
  BASE_IMAGE_TAG: ${{ github.ref_name }}
  BUILD_NAMESPACE: ${{ vars.OPENSHIFT_DEPLOY_PROJECT }}-tools
  DEPLOY_NAMESPACE: ${{ vars.OPENSHIFT_DEPLOY_PROJECT }}-${{ github.ref_name }}
  BUILD_ID: ${{ github.event.number }}
  BRANCH: ${{ github.ref_name }}
  SOURCE_REPOSITORY_URL: "https://github.com/${{ github.repository }}"
  INSPECT_JOB_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  BUILD_ICON_URL: https://cdn-icons-png.flaticon.com/128/5110/5110294.png
  SUCCESS_ICON_URL: https://cdn-icons-png.flaticon.com/128/1356/1356479.png
  FAIL_ICON_URL: https://www.flaticon.com/free-icon/rocket_6818114

on:
  workflow_run:
    workflows: [DISABLED]
    types:
      - completed

jobs:
  #Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Build ID: ${{ github.event.number }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)
          echo Git Branch name: ${{ github.ref_name }}
          echo "-----------------------"
          echo "Skip Build? ${{ vars.SKIP_BUILD }}"
          echo "-----------------------"
          echo Deploy to: ${{ env.DEPLOY_NAMESPACE }}
          echo Pod name: ${{ steps.dotenv.outputs.PHP_DEPLOYMENT_NAME }}
          echo cron: ${{ env.CRON_DEPLOYMENT_NAME }}
          echo db: ${{ env.DB_DEPLOYMENT_NAME }}
          echo redis: ${{ env.REDIS_DEPLOYMENT_NAME }}
          echo moodle: ${{ env.DB_USER }}
          echo db-backup: ${{ env.DB_BACKUP_POD }}
          echo db-0.mysql: ${{ env.DB_HOST }}

  notify-failure:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    needs: [checkEnv]
    steps:
      - name: Notify Team of Workflow Failure
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
          data: '{
            "alias":"FAILED GitHub Action by ${{ env.USER }}",
            "text":"${{ github.workflow }} for repo: ${{ github.repository }}:${{ github.ref_name }}",
            "attachments":[{
              "title":"${{ github.job }} ${{ job.status }} to ${{ github.ref_name }}",
              "title_link": "${{ env.INSPECT_JOB_URL }}",
              "text":"Failure detected in ${{ github.repository }}:${{ github.ref_name }}",
              "thumb_url": "${{ env.FAIL_ICON_URL }}",
              "color":"#764FA5"
            }]}'

  notify-success:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify Team of Workflow Success
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
          data: '{
            "alias":"Successful deployment by $USER",
            "text":"${{ github.workflow }} for repo: ${{ github.repository }}:${{ github.ref_name }}",
            "attachments":[{
              "title":"${{ github.job }} ${{ job.status }} to ${{ github.ref_name }}",
              "title_link":"https://github.com/kaji-bikash/rocketchat-pagerduty/blob/master/rocketchat_pagerduty_incoming.js",
              "text":"Successful ${{ github.job }} in ${{ github.workflow }} of ${{ github.repository }}:${{ github.ref_name }}",
              "thumb_url":"$SUCCESS_ICON_URL",
              "color":"#764FA5"
              }]
            }]
            }'