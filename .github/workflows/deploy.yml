# Deploy On Openshift
# Builds and Deploys merged PR's to persistent pods/services/routes/etc in the OpenShift environment.
name: ðŸš€ Deploy

env:
  APP: moodle
  USER: ${{ github.actor }}

on:
  workflow_call:
    inputs:
      MOODLE_ENVIRONMENT:
        required: true
        type: string
      APP:
        required: true
        type: string
      WEB_DEPLOYMENT_NAME:
        required: true
        type: string
      WEB_IMAGE:
        required: true
        type: string
      PHP_DEPLOYMENT_NAME:
        required: true
        type: string
      DB_HOST:
        required: true
        type: string
      DB_NAME:
        required: true
        type: string
      DB_DEPLOYMENT_NAME:
        required: true
        type: string
      CRON_IMAGE:
        required: true
        type: string
      CRON_DEPLOYMENT_NAME:
        required: true
        type: string
      REDIS_DEPLOYMENT_NAME:
        required: true
        type: string
      APP_HOST_URL:
        required: true
        type: string
      BUILD_NAMESPACE:
        required: true
        type: string
      DEPLOY_NAMESPACE:
        required: true
        type: string
      IMAGE_REPO:
        required: true
        type: string
      DB_BACKUP_DEPLOYMENT_NAME:
        required: true
        type: string
      BACKUP_HELM_CHART:
        required: true
        type: string
      BACKUP_IMAGE:
        required: true
        type: string
permissions:
  contents: read
  id-token: write

jobs:
  # Deploy to Openshift
  deploy:
    name: OpenShift (${{ github.ref_name }})
    runs-on: ubuntu-latest
    if: |
      always()
      && (
        github.ref_name == 'dev' || github.ref_name  == 'test' || github.ref_name  == 'prod'
      ) || (
        contains(github.event.workflow_run.conclusion, 'success')
        && !contains(github.event.workflow_run.conclusion, 'failure')
      )
    steps:
      - name: ðŸ“¤ Checkout Target Branch
        uses: actions/checkout@v3
        with:
          ref: dev

      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: ðŸ”‘ Log in to OpenShift ( ${{ github.ref_name }} )
        if: success()
        run: |
          server=https://api.silver.devops.gov.bc.ca:6443
          if [[ ${{ github.ref_name == 'test' }} ]]; then
            oc login --token=${{ secrets.AUTH_TOKEN_DEV }} --server=$server
          elif [[ ${{ github.ref_name == 'test' }} ]]; then
            oc login --token=${{ secrets.AUTH_TOKEN_TEST }} --server=$server
          elif [[ ${{ github.ref_name == 'prod' }} ]]; then
            oc login --token=${{ secrets.AUTH_TOKEN_PROD }} --server=$server
          else
            echo "No AUTH_TOKEN found for ${{ github.ref_name }} branch"
          fi

      - name: ConfigMap (moodle-env)
        if: success()
        run: |
          if [[ `oc describe configmap moodle-env 2>&1` =~ "NotFound" ]]; then
            oc create configmap moodle-env --from-file=.env=./example.env
          else
            oc delete configmap moodle-env
            oc create configmap moodle-env --from-file=.env=./example.env
          fi

      - name: Backups
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: bash ./openshift/scripts/deploy-database-backups.sh
        env:
          DB_BACKUP_DEPLOYMENT_NAME: ${{ inputs.DB_BACKUP_DEPLOYMENT_NAME }}
          BACKUP_HELM_CHART: ${{ inputs.BACKUP_HELM_CHART }}
          DB_BACKUP_IMAGE: ${{ inputs.BACKUP_IMAGE }}
          DB_HOST: ${{ inputs.DB_HOST }}
          DB_NAME: ${{ inputs.DB_NAME }}

      # To uninstall/delete the my-release release:
      # helm delete --purge ${{ inputs.DB_DEPLOYMENT_NAME  }}
      - name: ${{ inputs.DB_DEPLOYMENT_NAME  }}
        if: success()
        run: bash ./openshift/scripts/deploy-database.sh
        env:
          DB_DEPLOYMENT_NAME: ${{ inputs.DB_DEPLOYMENT_NAME }}
          DEPLOY_NAMESPACE: ${{ inputs.DEPLOY_NAMESPACE }}

      - name: Template
        if: success()
        run: bash ./openshift/scripts/deploy-template.sh
        env:
          MOODLE_ENVIRONMENT: ${{ inputs.MOODLE_ENVIRONMENT }}
          APP: ${{ inputs.APP }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          BUILD_TAG: ${{ inputs.OPENSHIFT_DEPLOY_PROJECT }}-${{ github.ref_name }}
          APP_HOST_URL: ${{ inputs.APP_HOST_URL }}
          BUILD_NAMESPACE: ${{ inputs.BUILD_NAMESPACE }}
          IMAGE_REPO: ${{ inputs.IMAGE_REPO }}
          DEPLOY_NAMESPACE: ${{ inputs.DEPLOY_NAMESPACE }}
          WEB_DEPLOYMENT_NAME: ${{ inputs.WEB_DEPLOYMENT_NAME }}
          WEB_IMAGE: ${{ secrets.ARTIFACTORY_URL }}/${{ inputs.WEB_IMAGE }}
          PHP_DEPLOYMENT_NAME: ${{ inputs.PHP_DEPLOYMENT_NAME }}
          DB_DEPLOYMENT_NAME: ${{ inputs.DB_DEPLOYMENT_NAME }}
          CRON_DEPLOYMENT_NAME: ${{ inputs.CRON_DEPLOYMENT_NAME }}
          CRON_IMAGE: ${{ inputs.CRON_IMAGE }}
          REDIS_DEPLOYMENT_NAME: ${{ inputs.REDIS_DEPLOYMENT_NAME }}
          BACKUP_HELM_CHART: ${{ inputs.BACKUP_HELM_CHART }}
          BACKUP_IMAGE: ${{ inputs.BACKUP_IMAGE }}

