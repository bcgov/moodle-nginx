name: 🚀 Deploy to OpenShift

concurrency:
  group: ${{ github.workflow }}-github.ref }}
  cancel-in-progress: false

env:
  APP: moodle
  USER: ${{ github.actor }}

  # Skip builds for faster deployments / testing ("YES" or build)
  SKIP_BUILDS: "NO"
  # Clean builds before deployments (delete all resources, other than backups) ("YES" or allow collisions)
  CLEAN_BUILDS: "YES"

  PROJECT: ${{ env.OPENSHIFT_DEPLOY_PROJECT }}
  APP_HOST_URL: moodle-${{ env.OPENSHIFT_DEPLOY_PROJECT }}-${{ github.ref_name }}.apps.silver.devops.gov.bc.ca
  BASE_IMAGE_TAG: ${{ github.ref_name }}
  BUILD_NAMESPACE: ${{ env.OPENSHIFT_DEPLOY_PROJECT }}-tools
  DEPLOY_NAMESPACE: ${{ env.OPENSHIFT_DEPLOY_PROJECT }}-${{ github.ref_name }}
  BUILD_ID: ${{ github.event.number }}
  BRANCH: ${{ github.ref_name }}
  SOURCE_REPOSITORY_URL: "https://github.com/${{ github.repository }}"
  INSPECT_JOB_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  BUILD_ICON_URL: https://cdn-icons-png.flaticon.com/128/5110/5110294.png
  SUCCESS_ICON_URL: https://cdn-icons-png.flaticon.com/128/1356/1356479.png
  FAIL_ICON_URL: https://www.flaticon.com/free-icon/rocket_6818114

on:
  push:
    branches:
      - dev
      # - test
      # - prod
    paths:
      - '**.Dockerfile'
      - '**.conf'
      - '**.env'
      - '**.ini'
      - '**.php'
      - '**.yml'
      - '**.json'
      - '**.sh'
      - '**.txt'
  pull_request:
    branches:
      - dev
      #- test
      #- prod
    paths:
      - '**.Dockerfile'
      - '**.conf'
      - '**.env'
      - '**.ini'
      - '**.php'
      - '**.yml'
      - '**.json'
      - '**.sh'
      - '**.txt'

jobs:
  #Print variables for logging and debugging purposes
  checkEnv:
    name: 📋 Environment Check
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Deploying ${{ env.PROJECT }} > ${{ env.APP }} on ${{ env.DEPLOY_NAMESPACE }}
          echo "-----------------------"
          echo URL: https://${{ env.APP_HOST_URL }}
          echo "CLEAN_BUILDS: ${{ env.CLEAN_BUILDS }}"
          echo "SKIP_BUILDS: ${{ needs.checkEnv.SKIP_BUILDS }}"

  # Build Images and deploy to JFrog
  db:
    name: 🔨 Build DB image
    needs: [checkEnv]
    uses: ./.github/workflows/db.yml
    secrets: inherit # pass all secrets

  db-backup:
    name: 🔨 Deploy DB backups
    needs: [checkEnv]
    uses: ./.github/workflows/db-backup.yml
    secrets: inherit # pass all secrets

  php:
    name: 🔨 Build PHP image
    needs: [checkEnv]
    uses: ./.github/workflows/php.yml
    secrets: inherit # pass all secrets

  cron:
    name: 🔨 Build CRON image
    needs: [checkEnv]
    uses: ./.github/workflows/cron.yml
    secrets: inherit # pass all secrets

  moodle:
    name: 🔨 Build Moodle image
    needs: [checkEnv]
    uses: ./.github/workflows/moodle.yml
    secrets: inherit # pass all secrets

  call-cleanup-workflow:
    name: 🧹️ Clean Build ( ${{ env.CLEAN_BUILDS }} )
    uses: ./.github/workflows/cleanup.yml
    secrets: inherit # pass all secrets
    needs: [checkEnv, db, php, cron, moodle]
    if: success() && ${{ env == 'YES' }}
    secrets: inherit
    with:
      APP: ${{ env.APP }}
      APP_HOST_URL: "https://${{ env.APP }}-${{ env.DEPLOY_NAMESPACE }}-${{ github.ref_name }}.apps.silver.devops.gov.bc.ca"
      BRANCH: ${{ github.ref_name }}
      BUILD_NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
      DEPLOY_NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
      DB_DEPLOYMENT_NAME: ${{ env.DB_DEPLOYMENT_NAME }}
      WEB_DEPLOYMENT_NAME: ${{ env.WEB_DEPLOYMENT_NAME }}
      PHP_DEPLOYMENT_NAME: ${{ env.PHP_DEPLOYMENT_NAME }}
      CRON_DEPLOYMENT_NAME: ${{ env.CRON_DEPLOYMENT_NAME }}
      REDIS_DEPLOYMENT_NAME: ${{ env.REDIS_DEPLOYMENT_NAME }}

  call-deploy-workflow:
    name: 🚀 Deploy to OpenShift
    uses: ./.github/workflows/deploy.yml
    secrets: inherit # pass all secrets
    needs: [checkEnv, db, php, cron, moodle, call-cleanup-workflow]
    if: needs.build-jfrog-images.result == 'success' || needs.build-jfrog-images.result == 'skipped' || needs.checkEnv.outputs.SKIP_BUILDS == 'FALSE'
    secrets: inherit
    with:
      BASE_IMAGE_TAG: ${{ github.ref_name }}
      APP: ${{ env.APP }}
      DB_NAME: ${{ env.DB_NAME }}
      DB_USER: ${{ env.DB_USER }}
      DB_PASSWORD: ${{ env.DB_PASSWORD }}
      WEB_DEPLOYMENT_NAME: ${{ env.WEB_DEPLOYMENT_NAME }}
      WEB_IMAGE: ${{ env.WEB_IMAGE }}
      PHP_DEPLOYMENT_NAME: ${{ env.PHP_DEPLOYMENT_NAME }}
      PHP_IMAGE: ${{ env.PHP_IMAGE }}
      DB_DEPLOYMENT_NAME: ${{ env.DB_DEPLOYMENT_NAME }}
      DB_IMAGE: ${{ env.DB_IMAGE }}
      CRON_IMAGE: ${{ env.CRON_IMAGE }}
      CRON_DEPLOYMENT_NAME: ${{ env.CRON_DEPLOYMENT_NAME }}
      REDIS_REPO: ${{ env.REDIS_REPO }}
      REDIS_DEPLOYMENT_NAME: ${{ env.REDIS_DEPLOYMENT_NAME }}
      REDIS_IMAGE: ${{ env.REDIS_IMAGE }}
      APP_HOST_URL: ${{ env.APP_HOST_URL }}
      BUILD_NAMESPACE: ${{ env.BUILD_NAMESPACE }}
      DEPLOY_NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
      IMAGE_REPO: ${{ env.IMAGE_REPO }}
      BRANCH: ${{ env.BRANCH }}

  notify:
    name: 📫 Send Notifications (via Rocket.Chat)
    needs: [db, php, cron, moodle, call-deploy-workflow]
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: ⚠️ Failure
        if: failure()
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
          data: '{
            "alias":"FAILED GitHub Action by ${{ env.USER }}",
            "text":"Job: ${{ github.job }} in
              ${{ github.workflow }} of
              ${{ github.repository }}:${{ github.ref_name }} >>
              Deploy1: ${{ needs.call-deploy-workflow.outputs.deploy1 }}
              Deploy2: ${{ needs.call-deploy-workflow.outputs.deploy2 }}",
            "attachments":[{
              "title":"${{ github.job }} ${{ job.status }} to ${{ github.ref_name }}",
              "title_link": "${{ env.INSPECT_JOB_URL }}",
              "text":"Failure detected in ${{ github.repository }}:${{ github.ref_name }}",
              "image_url": "${{ env.FAIL_ICON_URL }}",
              "color":"#e7e076"
            }]}'
      - name: ✅ Success
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
          data: '{
            "alias":"Successful ${{ github.job }} by ${{ env.USER }}",
            "text":"${{ github.job }} in ${{ github.workflow }}
              of ${{ github.repository }}:${{ github.ref_name }}",
            "attachments":[{
              "title":"${{ github.job }} ${{ job.status }} to ${{ github.ref_name }}",
              "title_link": "${{ env.INSPECT_JOB_URL }}",
              "text":"Successful deployment of: ${{ github.repository }}:${{ github.ref_name }}",
              "image_url": "${{ env.SUCCESS_ICON_URL }}",
              "color":"#05a227"
            }]}'
